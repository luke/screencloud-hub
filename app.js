// Generated by CoffeeScript 1.8.0
(function() {
  var chromecast, client, dial, listDevices, restify, server, sjsc, startApp, updateListDevicesOnCloud, _;

  _ = require('lodash');

  chromecast = require('./chromecast');

  dial = require('./dial');

  listDevices = function() {
    var castDevices, devices, dialDevices;
    castDevices = _.values(chromecast.devices);
    dialDevices = _.values(dial.devices);
    dialDevices = _.reject(dialDevices, function(x) {
      return x.info['modelName'] === 'Eureka Dongle';
    });
    return devices = castDevices.concat(dialDevices);
  };

  startApp = function(deviceId, appId, launchArgs, callback) {
    var appNamespace, params;
    if (chromecast.devices[deviceId]) {
      appNamespace = launchArgs;
      console.log("start app on cast device", deviceId, appId, appNamespace);
      return chromecast.startApp(deviceId, appId, appNamespace, callback);
    } else {
      params = launchArgs;
      console.log("start app on dial device", deviceId, appId, params);
      return dial.startApp(deviceId, appId, params, callback);
    }
  };

  sjsc = require('sockjs-client');

  client = sjsc.create("http://sock.screencloud.io/sock");

  client.on('connection', function() {
    return console.log('open!');
  });

  client.on('data', function(data) {
    return console.log('data', data);
  });

  client.on('error', function(error) {
    return console.log('error', error);
  });

  updateListDevicesOnCloud = function() {
    var devices;
    devices = listDevices();
    return client.write(devices);
  };

  restify = require('restify');

  server = restify.createServer({
    name: 'screencloud-hub',
    version: '0.0.0'
  });

  server.use(restify.acceptParser(server.acceptable));

  server.use(restify.queryParser());

  server.use(restify.jsonp());

  server.use(restify.CORS());

  server.use(restify.bodyParser());

  server.get('/devices', function(req, res, next) {
    res.send(200, {
      devices: listDevices()
    });
    return next();
  });

  server.post('/devices/:id/launch', function(req, res, next) {
    var appId, deviceId, launchArgs;
    deviceId = req.params.id;
    appId = req.params.app_id;
    launchArgs = req.params['launch_args'];
    return startApp(deviceId, appId, launchArgs, function(result) {
      res.send(200, result);
      return next();
    });
  });

  server.listen(8081, function() {
    return console.log('%s listening at %s', server.name, server.url);
  });

}).call(this);

//# sourceMappingURL=app.js.map
